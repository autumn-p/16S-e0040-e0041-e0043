XEA_alpha_diversity_barPlot
XEA_alpha_diversity_barPlot <- datae0041meta %>% distinct(alpha_diveristy_e0041) %>%
filter(well %in% c("B11", "B12", "D11", "D12", "F11", "F12") & subject == "XEA") %>%
group_by(donor, recipient) %>%
ggplot() +
geom_bar(aes(x = interaction(donor, recipient), y = alpha_diversity_e0041, fill = interaction(donor, recipient)), stat = "identity", color = "black") +
xlab("Community Type") +
ylab("Alpha Diversity") +
ggtitle("Distribution of Alpha Diversity by Community Type") +
theme_bw()
colnames(datae0041meta)
distinct(e0041metadata$alpha_diveristy_e0041)
distinct(datae0041meta$alpha_diveristy_e0041)
beyonce <- unique(datae0041meta$alpha_diveristy_e0041)
beyonce <- distinct(datae0041meta$alpha_diveristy_e0041)
beyonce <- datae0041meta %>% distinct(alpha_diveristy_e0041)
# Remove duplicates based on alpha_diveristy_e0041 column
beyonce <- datae0041meta[!duplicated(datae0041meta$alpha_diversity_e0041), ]
View(beyonce)
# Creating dataframe with each well of each plate having one row
alpha_diversity_table <- datae0041meta %>%
group_by(subject, well, relAbundance, donor, recipient, controls, replicate, alpha_diversity_e0041, fullSilvataxonomy) %>%
summarize(alpha_diversity_e0041 = sum(count > 0))
View(alpha_diversity_table)
# Creating dataframe with each well of each plate having one row
alpha_diversity_table <- datae0041meta %>%
group_by(subject, well) %>%
distinct(alpha_diversity_e0041, .keep_all = TRUE)
View(datae0041raw)
View(datae0041)
# Create a bar plot using ggplot2
alpha_diversity_barPlot <- alpha_diversity_table %>%
filter(well == "B11" & subject == "XEA") %>%
ggplot() +
geom_bar(aes(x = paste("donor: ", donor, " recipient: ", recipient), y = alpha_diversity_e0041), stat = "identity", color = "black", fill = "blue") +
xlab("Community Type") +
ylab("Alpha Diversity") +
ggtitle("Distribution of Alpha Diversity by Community Type") +
theme_bw()
alpha_diversity_barPlot
# Save plot
save_plot(paste0(outPath, "/alphaDiversity_XEApre_barPlot.png"), alpha_diversity_barPlot, base_width = 5, base_height = 5)
XEA_alpha_diversity_barPlot <- alpha_diversity_table %>%
filter(well %in% c("B11", "B12", "D11", "D12", "F11", "F12") & subject == "XEA") %>%
group_by(donor, recipient) %>%
ggplot() +
geom_bar(aes(x = interaction(donor, recipient), y = alpha_diversity_e0041, fill = interaction(donor, recipient)), stat = "identity", color = "black") +
xlab("Community Type") +
ylab("Alpha Diversity") +
ggtitle("Distribution of Alpha Diversity by Community Type") +
theme_bw()
XEA_alpha_diversity_barPlot
# Save plot
save_plot(paste0(outPath, "/alphaDiversity_XEAprepostV1V2_barPlot.png"), XEA_alpha_diversity_barPlot, base_width = 15, base_height = 10)
#B11 vs B12
#XBA pre + super community vs XBA pre
#D11 vs D12
#XBA post + super community vs XBA post
#F11 vs F12
#XBA drop out + super community vs XBA drop out
XBA_alpha_diversity_barPlot <- alpha_diversity_table %>%
filter(well %in% c("B11", "B12", "D11", "D12", "F11", "F12") & subject == "XBA") %>%
group_by(donor, recipient) %>%
ggplot() +
geom_bar(aes(x = interaction(donor, recipient), y = alpha_diversity_e0041, fill = interaction(donor, recipient)), stat = "identity", color = "black") +
xlab("Community Type") +
ylab("Alpha Diversity") +
ggtitle("Distribution of Alpha Diversity by Community Type") +
theme_bw()
XBA_alpha_diversity_barPlot
# Save plot
save_plot(paste0(outPath, "/alphaDiversity_XBAprepostdrop_barPlot.png"), XBA_alpha_diversity_barPlot, base_width = 15, base_height = 10)
# Save plot
save_plot(paste0(outPath, "/replicateReliability_scatterplot.png"), alpha_diversity_scatterPlot)
# Scatter Plot assessing reliability based on replicates alpha diversity
alpha_diversity_scatterPlot <- alpha_diversity_table %>%
filter(well %in% c("B1", "C1") & subject == "XEA") %>%
group_by(donor, recipient) %>%
ggplot() +
geom_point(aes(x = interaction(donor, recipient), y = alpha_diversity_e0041, fill = interaction(donor, recipient)), stat = "identity", color = "black") +
xlab("Community Type") +
ylab("Alpha Diversity") +
ggtitle("Alpha Diversity by Replicate") +
theme_bw()
alpha_diversity_scatterPlot
# Save plot
save_plot(paste0(outPath, "/replicateReliability_scatterplot.png"), alpha_diversity_scatterPlot)
# PLotting all replicates that have replicate number >1
# Scatter Plot assessing reliability based on replicates alpha diversity
alpha_diversity_scatterPlot_all <- alpha_diversity_table %>%
group_by(donor, recipient) %>%
ggplot() +
geom_point(aes(x = interaction(donor, recipient), y = alpha_diversity_e0041, fill = interaction(donor, recipient)), stat = "identity", color = "black") +
xlab("Community Type") +
ylab("Alpha Diversity") +
ggtitle("Alpha Diversity by Replicate") +
theme_bw()
alpha_diversity_scatterPlot
alpha_diversity_scatterPlot_all
# Save plot
save_plot(paste0(outPath, "/replicateReliability_scatterplot.png"), alpha_diversity_scatterPlot_all, base_width = 15, base_height = 10)
# Just replicate 1 & 2 under same conditions
# Scatter Plot assessing reliability based on replicates alpha diversity
alpha_diversity_scatterPlot <- alpha_diversity_table %>%
filter(well %in% c("B1", "C1") & subject == "XEA") %>%
group_by(donor, recipient) %>%
ggplot() +
geom_point(aes(x = interaction(donor, recipient), y = alpha_diversity_e0041, fill = interaction(donor, recipient)), stat = "identity", color = "black") +
xlab("Community Type") +
ylab("Alpha Diversity") +
ggtitle("Alpha Diversity by Replicate") +
theme_bw()
alpha_diversity_scatterPlot
# Save plot
save_plot(paste0(outPath, "/replicateReliability_scatterplot.png"), alpha_diversity_scatterPlot)
# Save plot
save_plot(paste0(outPath, "/single_replicateReliability_scatterplot.png"), alpha_diversity_scatterPlot)
# Save plot
save_plot(paste0(outPath, "/all_replicateReliability_scatterplot.png"), alpha_diversity_scatterPlot_all, base_width = 15, base_height = 10)
# PLotting all replicates that have replicate number >1
# Scatter Plot assessing reliability based on replicates alpha diversity
alpha_diversity_scatterPlot_all <- alpha_diversity_table %>%
group_by(donor, recipient) %>%
ggplot() +
geom_point(aes(x = interaction(donor, recipient), y = alpha_diversity_e0041, fill = interaction(donor, recipient)), stat = "identity", color = "black") +
xlab("Community Type") +
ylab("Alpha Diversity") +
ggtitle("Alpha Diversity by Replicate") +
theme_bw() +
theme(legend.position="none")
alpha_diversity_scatterPlot_all
# PLotting all replicates that have replicate number >1
# Scatter Plot assessing reliability based on replicates alpha diversity
alpha_diversity_scatterPlot_all <- alpha_diversity_table %>%
group_by(donor, recipient) %>%
ggplot() +
geom_point(aes(x = interaction(donor, recipient), y = alpha_diversity_e0041, fill = interaction(donor, recipient)), stat = "identity", color = "black") +
xlab("Community Type") +
ylab("Alpha Diversity") +
ggtitle("Alpha Diversity by Replicate") +
theme_bw() +
theme(legend.position="none", axis.text.x = element_text(angle = 60, hjust = 1))
alpha_diversity_scatterPlot_all
# Save plot
save_plot(paste0(outPath, "/all_replicateReliability_scatterplot.png"), alpha_diversity_scatterPlot_all, base_width = 20, base_height = 15)
colnames(alpha_diversity_table)
beyonce <- alpha_diversity_table %>%
mutate(community_mixture = case_when(
# donor+recipient portion excluding super-community
!is.na(donor) & donor != "super-community" & !is.na(recipient) ~ paste(donor, "+", recipient),
# recipient_only portion
is.na(donor) & !is.na(recipient) ~ "recipient_only",
# donor_only excluding super-community
!is.na(donor) & donor != "super-community" & is.na(recipient) ~ "donor_only",
# super+recipient portion
donor == "super-community" & !is.na(recipient) ~ "super+recipient",
# everything else
TRUE ~ NA_character_
))
View(beyonce)
beyonce <- alpha_diversity_table %>%
mutate(community_mixture = case_when(
# donor+recipient portion excluding super-community
!is.na(donor) & donor != "super-community" & !is.na(recipient) ~ "donor+recipient",
# recipient_only portion
is.na(donor) & !is.na(recipient) ~ "recipient_only",
# donor_only excluding super-community
!is.na(donor) & donor != "super-community" & is.na(recipient) ~ "donor_only",
# super+recipient portion
donor == "super-community" & !is.na(recipient) ~ "super+recipient",
# everything else
TRUE ~ NA_character_
))
beyonce <- alpha_diversity_table %>%
mutate(community_mixture = case_when(
# super+recipient portion
donor == "super-community" & !is.na(recipient) ~ "super+recipient",
# recipient_only portion ***
is.na(donor) & !is.na(recipient) ~ "recipient_only",
# donor_only excluding super-community ***
!is.na(donor) & donor != "super-community" & is.na(recipient) ~ "donor_only",
# donor+recipient portion excluding super-community
!is.na(donor) & donor != "super-community" & !is.na(recipient) ~ "donor+recipient",
# everything else
TRUE ~ NA_character_
))
# Based off naming covention community (ex. "XBB-029") or "blank
beyonce <- alpha_diversity_table %>%
mutate(community_mixture = case_when(
# donor+recipient portion excluding super-community
donor != "blank" & donor != "super-community" & recipient != "blank" ~ "donor+recipient",
# recipient_only portion
donor == "blank" & recipient !="blank" ~ "recipient_only",
# donor_only excluding super-community
donor != blank & recipient !="blank" & is.na(recipient) ~ "donor_only", #exclude super-community here too?
# super+recipient portion
donor == "super-community" & recipient != blank ~ "super+recipient",
# everything else
TRUE ~ NA_character_
))
beyonce <- alpha_diversity_table %>%
mutate(community_mixture = case_when(
donor == "super-community" & recipient != "blank" ~ "super+recipient",
donor == "blank" & recipient != "blank" ~ "recipient_only",
donor != "blank" & donor != "super-community" & recipient == "blank" ~ "donor_only",
donor != "blank" & donor != "super-community" & recipient != "blank" ~ "donor+recipient",
TRUE ~ NA_character_
))
# Based off naming covention community (ex. "XBB-029") or "blank
beyonce <- alpha_diversity_table %>%
mutate(community_mixture = case_when(
# super+recipient portion
donor == "super-community" & recipient != "blank" ~ "super+recipient",
# recipient_only portion
donor == "blank" & recipient != "blank" ~ "recipient_only",
# donor_only, should I be excluding super-community****
donor != "blank" & recipient == "blank" ~ "donor_only",
# donor+recipient portion excluding super-community
donor != "blank" & donor != "super-community" & recipient != "blank" ~ "donor+recipient",
# everything else
TRUE ~ NA_character_
))
# Based off naming covention community (ex. "XBB-029") or "blank
alpha_diversity_table <- alpha_diversity_table %>%
mutate(community_mixture = case_when(
# super+recipient portion
donor == "super-community" & recipient != "blank" ~ "super+recipient",
# recipient_only portion
donor == "blank" & recipient != "blank" ~ "recipient_only",
# donor_only, should I be excluding super-community****
donor != "blank" & recipient == "blank" ~ "donor_only",
# donor+recipient portion excluding super-community
donor != "blank" & donor != "super-community" & recipient != "blank" ~ "donor+recipient",
# everything else
TRUE ~ NA_character_
))
alpha_diversity_scatterPlot_all <- alpha_diversity_table %>%
group_by(community_mixture) %>%
ggplot() +
geom_point(aes(x = community_mixture, y = alpha_diversity_e0041, fill = interaction(community_mixture)), stat = "identity", color = "black") +
xlab("Community Mixture") +
ylab("Alpha Diversity") +
ggtitle("Alpha Diversity by Community") +
theme_bw() +
theme(legend.position="none", axis.text.x = element_text(angle = 60, hjust = 1))
alpha_diversity_scatterPlot_all
# Save plot
save_plot(paste0(outPath, "/replicateMixGrouped_scatterplot.png"), alpha_diversity_scatterPlot_grouped, base_width = 20, base_height = 15)
# Alpha Diversity Scatter plot with replicates grouped by community mixture type
alpha_diversity_scatterPlot_grouped <- alpha_diversity_table %>%
group_by(community_mixture) %>%
ggplot() +
geom_point(aes(x = community_mixture, y = alpha_diversity_e0041, fill = interaction(community_mixture)), stat = "identity", color = "black") +
xlab("Community Mixture") +
ylab("Alpha Diversity") +
ggtitle("Alpha Diversity by Community") +
theme_bw() +
theme(legend.position="none", axis.text.x = element_text(angle = 60, hjust = 1))
alpha_diversity_scatterPlot_grouped
# Save plot
save_plot(paste0(outPath, "/replicateMixGrouped_scatterplot.png"), alpha_diversity_scatterPlot_grouped, base_width = 20, base_height = 15)
# Save plot
save_plot(paste0(outPath, "/replicateMixGrouped_scatterplot.png"), alpha_diversity_scatterPlot_grouped, base_width = 10, base_height = 10)
#Stacked Bar Plot of Taxonomic Composition:
#Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- datae0040meta %>%
filter(!is.na(community_mixture)) %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0040vector) +
facet_wrap(~community_mixture) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Distribution of Community Types based on Relative Abundance")
community_abundance_bar
#Stacked Bar Plot of Taxonomic Composition:
#Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- datae0040meta %>%
filter(!is.na(community_mixture)) %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0040vector) +
facet_wrap(~community_mixture) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Distribution of Community Types based on Relative Abundance")
#Stacked Bar Plot of Taxonomic Composition:
#Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- alpha_diversity_table %>%
filter(!is.na(community_mixture)) %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0040vector) +
facet_wrap(~community_mixture) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Distribution of Community Types based on Relative Abundance")
#Stacked Bar Plot of Taxonomic Composition:
#Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- alpha_diversity_table %>%
filter(!is.na(community_mixture)) %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
facet_wrap(~community_mixture) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Distribution of Community Types based on Relative Abundance")
community_abundance_bar
save_plot(paste0(outPath, "/community_abundance_bar.png"), community_abundance_bar, base_width = 10, base_height = 10)
KCHpalette_path = "C:/Users/aparr/16S-e0041-e0043/config/KCHcolors-Silva-partial.txt" #color palette
# Import the color palette
KCHpalette <- read.table(KCHpalette_path, header = TRUE)
# Create a stripped-down color palette containing only the families
# present in the dataset.
datae0041meta <- datae0041meta %>%
mutate(fullSilvataxonomy=paste(Kingdom,Phylum,Class,Order,Family, sep="."))
KCHpalettee0041 <- KCHpalette %>%
filter(taxa %in% sort(unique(datae0041meta$fullSilvataxonomy))) %>%
mutate(taxashort=ifelse(taxashort=="", gsub(".*\\.","",taxa), taxashort))
# Make a named list
KCHpalettee0041vector <- KCHpalettee0041$hex
names(KCHpalettee0041vector) <- KCHpalettee0041$taxashort
#Stacked Bar Plot of Taxonomic Composition:
#Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- alpha_diversity_table %>%
filter(!is.na(community_mixture)) %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
facet_wrap(~community_mixture) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Distribution of Community Types based on Relative Abundance")
community_abundance_bar
save_plot(paste0(outPath, "/community_abundance_bar.png"), community_abundance_bar, base_width = 10, base_height = 10)
#Stacked Bar Plot of Taxonomic Composition:
#Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- alpha_diversity_table %>%
filter(!is.na(community_mixture)) %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Distribution of Community Types based on Relative Abundance")
community_abundance_bar
save_plot(paste0(outPath, "/community_abundance_bar.png"), community_abundance_bar, base_width = 10, base_height = 10)
#Stacked Bar Plot of Taxonomic Composition:
#Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- alpha_diversity_table %>%
filter(!is.na(community_mixture)) %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
facet_wrap(~community_mixture) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Distribution of Community Types based on Relative Abundance")
community_abundance_bar
save_plot(paste0(outPath, "/community_abundance_bar.png"), community_abundance_bar, base_width = 10, base_height = 10)
# Bar plot showing the relative abundance of each community
#   filter(recipient %in% c("XEA-pre", "XEA-post-V1", "XEA-post-V2", "XBA-pre-abx", "XBA-post-abx", "XBA-drop-out")) %>%
# Create a bar plot using ggplot2
communityAbundanceBarByCommunity <- datae0041meta %>%
filter(well=="B1" & subject=="XBA") %>%
ggplot() +
geom_bar(aes(x=replicate, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
facet_wrap(donor~recipient) +
xlab("Recipient") +
ylab("Relative Abundance") +
ggtitle("Distribution of Family Relative Abundance")
communityAbundanceBarByCommunity
#Stacked Bar Plot of Taxonomic Composition:
#Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- alpha_diversity_table %>%
filter(community_mixture == "donor_only") %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Distribution of Community Types based on Relative Abundance")
community_abundance_bar
# SUMMARY PLOT
# Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- alpha_diversity_table %>%
filter(community_mixture %in% "donor_only") %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Distribution of Community Types based on Relative Abundance")
community_abundance_bar
filter(community_mixture %in% c("donor_only", "recipient_only") %>%
# SUMMARY PLOT
# Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- alpha_diversity_table %>%
filter(community_mixture %in% c("donor_only", "recipient_only")) %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Distribution of Community Types based on Relative Abundance")
community_abundance_bar
# SUMMARY PLOT
# Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- alpha_diversity_table %>%
filter(community_mixture %in% c("donor_only", "recipient_only")) %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance Distribution of Families based on Community Types")
community_abundance_bar
save_plot(paste0(outPath, "/community_abundance_bar.png"), community_abundance_bar, base_width = 10, base_height = 10)
# SUMMARY PLOT
# Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- alpha_diversity_table %>%
filter(community_mixture %in% c("donor_only", "recipient_only", "super+recipient", "donor+recipient")) %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance Distribution of Families based on Community Types")
community_abundance_bar
save_plot(paste0(outPath, "/community_abundance_bar.png"), community_abundance_bar, base_width = 10, base_height = 10)
# SUMMARY PLOT
# Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- alpha_diversity_table %>%
#filter(community_mixture %in% c("donor_only", "recipient_only", "super+recipient", "donor+recipient")) %>%
filter(well %in% c("B1", "B2", "B3", "B4") & subject == "XEA") %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance Distribution of Families based on Community Types")
community_abundance_bar
save_plot(paste0(outPath, "/community_abundance_bar.png"), community_abundance_bar, base_width = 10, base_height = 10)
communityAbundanceBarByCommunity
# SUMMARY PLOT
# Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- alpha_diversity_table %>%
#filter(community_mixture %in% c("donor_only", "recipient_only", "super+recipient", "donor+recipient")) %>%
filter(well %in% c("B1") & subject == "XEA") %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance Distribution of Families based on Community Types")
community_abundance_bar
# SUMMARY PLOT
# Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- alpha_diversity_table %>%
#filter(community_mixture %in% c("donor_only", "recipient_only", "super+recipient", "donor+recipient")) %>%
filter(well == "B1" & subject == "XEA") %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance Distribution of Families based on Community Types")
community_abundance_bar
# SUMMARY PLOT
# Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- alpha_diversity_table %>%
#filter(community_mixture %in% c("donor_only", "recipient_only", "super+recipient", "donor+recipient")) %>%
filter(well == "B1" & subject == "XEA") %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
facet_wrap(donor~recipient) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance Distribution of Families based on Community Types")
community_abundance_bar
# SUMMARY PLOT
# Create a stacked bar plot to visualize the taxonomic composition of the communities
# Create a bar plot using ggplot2
community_abundance_bar <- datae0041meta %>%
#filter(community_mixture %in% c("donor_only", "recipient_only", "super+recipient", "donor+recipient")) %>%
filter(well == "B1" & subject == "XEA") %>%
ggplot() +
geom_bar(aes(x=community_mixture, y=relAbundance, fill=factor(Family)), color = "black", stat= "identity") +
scale_fill_manual(values=KCHpalettee0041vector) +
xlab("Community Mixture Type") +
ylab("Relative Abundance") +
ggtitle("Relative Abundance Distribution of Families based on Community Types")
community_abundance_bar
